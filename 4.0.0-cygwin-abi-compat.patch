--- a/Makefile.am	2017-11-08 05:10:09.000000000 -0600
+++ b/Makefile.am	2017-11-08 11:48:50.260340600 -0600
@@ -34,7 +34,7 @@ pkgconfig_DATA = libxcrypt.pc
 
 # Build libcrypt.so.2 if obsolete APIs are excluded, libcrypt.so.1 otherwise.
 if ENABLE_OBSOLETE_API
-libcrypt_la_VERSION = 2:0:1
+libcrypt_la_VERSION = 2:0:2
 else
 libcrypt_la_VERSION = 2:0:0
 endif
@@ -42,7 +42,7 @@ endif
 libcrypt_la_LDFLAGS = \
 	-version-info $(libcrypt_la_VERSION) \
 	-Wl,--version-script=libcrypt.map \
-	-Wl,-z,defs -Wl,-z,text
+	-no-undefined
 libcrypt_la_CPPFLAGS = $(AM_CPPFLAGS) -DIN_LIBCRYPT
 
 CONFIG_STATUS_DEPENDENCIES = libcrypt.minver
--- a/configure.ac	2017-11-08 05:10:09.000000000 -0600
+++ b/configure.ac	2017-11-08 12:17:24.802162200 -0600
@@ -257,6 +257,10 @@ if test $enable_obsolete_api = 1; then
       done < ${srcdir}/libcrypt.minver
     ;;
 
+    *cygwin*)
+      SYMVER_FLOOR="GLIBC_2.0"
+    ;;
+
     *gnu*)
         # glibc exists for GNU Hurd, but it is unclear to me whether
         # it has a stable ABI yet.  For now, we are assuming not.
--- a/crypt-port.h	2017-11-08 05:10:09.000000000 -0600
+++ b/crypt-port.h	2017-11-08 12:14:55.870364500 -0600
@@ -126,8 +126,12 @@ void _xcrypt_secure_memset (void *s, siz
 
 /* Set the symbol version for EXTNAME, which uses INTNAME as its
    implementation.  */
+#ifdef __ELF__
 #define symver_set(extname, intname, version, mode) \
   __asm__ (".symver " #intname "," #extname mode #version)
+#else
+#define symver_set(...) __asm__ ("")
+#endif
 
 /* A construct with the same syntactic role as the expansion of symver_set,
    but which does nothing.  */
